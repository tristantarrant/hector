<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>me.prettyprint</groupId>
	<artifactId>hector</artifactId>
	<packaging>bundle</packaging>
	<!-- The version follows Cassandra's major version changes, e.g. 0.5.1 goes 
		with the 0.5.1 cassandra release -->
	<version>0.6.0-18.1-SNAPSHOT</version>
	<name>hector</name>
	<description>Cassandra Java Client Library</description>
	<url>http://github.com/rantav/hector</url>

	<properties>
		<!-- Set default encoding to UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- OSGi bundle properties -->
		<bundle.symbolicName>me.prettyprint.hector</bundle.symbolicName>
		<bundle.namespace>me.prettyprint</bundle.namespace>
		<slf4j.version>1.6.1</slf4j.version>
	</properties>

	<issueManagement>
		<system>github</system>
		<url>http://github.com/rantav/hector/issues</url>
	</issueManagement>

	<developers>
		<developer>
			<name>Ran Tavory</name>
			<id>rantav</id>
			<email>rantav@gmail.com</email>
		</developer>
	</developers>

	<build>
		<plugins>
			<!-- run examples thusly: mvn exec:java -Dexec.mainClass="me.prettyprint.cassandra.examples.ExampleDao" -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.ops4j</groupId>
				<artifactId>maven-pax-plugin</artifactId>
				<version>1.4</version>
				<configuration>
					<provision>
						<param>--platform=equinox</param>
					</provision>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>1.4.3</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>${bundle.symbolicName}</Bundle-SymbolicName>
						<Bundle-Version>${pom.version}</Bundle-Version>

						<Embed-Dependency>
							libthrift;scope=compile|runtime;type=!pom;inline=false,
							cassandra;scope=compile|runtime;type=!pom;inline=false,
							<!-- *;scope=compile|runtime;type=!pom;inline=false -->
						</Embed-Dependency>

						<Export-Package>
							<!-- !${bundle.namespace}.internal.*, -->
							${bundle.namespace}.*;version="${pom.version}"
						</Export-Package>

						<Import-Package>
							!org.apache.avro.*,
							!javax.jms.*,
							!javax.mail.*,
							!javax.servlet.*,
							!com.sun.*,
							!org.antlr.*,
							!jline.*,
							!sun.misc.*,
							*;resolution:=optional
            </Import-Package>

						<Private-Package>
							<!-- ${bundle.namespace}.internal.* -->
						</Private-Package>

						<_include>-osgi.bnd</_include>
					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<forkMode>always</forkMode>
					<additionalClasspathElements>
						<additionalClasspathElement>${basedir}/testlib/clhm-production-1.0.jar</additionalClasspathElement>
						<additionalClasspathElement>${basedir}/testlib/flexjson-1.7.jar</additionalClasspathElement>
						<additionalClasspathElement>${basedir}/testlib/high-scale-lib-1.0.jar</additionalClasspathElement>
						<additionalClasspathElement>${basedir}/testlib/commons-collections-3.0.jar</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>


			<!-- Setup the build for JAVA 1.6 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<optimize>true</optimize>
					<debug>true</debug>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- Configure the JUnit Env -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<systemProperties>
						<property>
							<name>storage-config</name>
							<value>${basedir}/src/test/conf</value>
						</property>
					</systemProperties>
					<forkMode>always</forkMode>
				</configuration>
			</plugin>

			<!-- cobertura code coverage reports -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- install various artifacts -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<id>install libthrift</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<groupId>libthrift</groupId>
							<artifactId>libthrift</artifactId>
							<version>917130</version>
							<file>${basedir}/lib/libthrift-r917130.jar</file>
						</configuration>
					</execution>
					<execution>
						<id>install high-scale-lib</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<groupId>org.cliffc.high_scale_lib</groupId>
							<artifactId>high-scale-lib</artifactId>
							<version>1.0.0</version>
							<file>${basedir}/lib/high-scale-lib.jar</file>
						</configuration>
					</execution>
					<execution>
						<id>install clhm-production</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<groupId>com.reardencommerce</groupId>
							<artifactId>clhm-production</artifactId>
							<version>1.0.0</version>
							<file>${basedir}/lib/clhm-production.jar</file>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.5.3</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.perf4j</groupId>
			<artifactId>perf4j</artifactId>
			<version>0.9.12</version>
		</dependency>
		<dependency>
			<groupId>com.google.collections</groupId>
			<artifactId>google-collections</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>

		<!-- OSGi deps -->
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi_R4_core</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi_R4_compendium</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>net.dataforte.cassandra</groupId>
			<version>0.3.3</version>
			<artifactId>cassandra-connection-pool</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cassandra</groupId>
			<artifactId>apache-cassandra</artifactId>
			<version>0.6.8</version>
			<scope>test</scope>
		</dependency>

		<!-- Testing Dependencies -->
		<dependency>
			<groupId>org.apache.cassandra</groupId>
			<artifactId>cassandra-javautils</artifactId>
			<version>0.6.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.reardencommerce</groupId>
			<artifactId>clhm-production</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.cliffc.high_scale_lib</groupId>
			<artifactId>high-scale-lib</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>properties-maven-plugin</artifactId>
			<version>1.0-alpha-2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>3.0.0.RELEASE</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.0.0.RELEASE</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<links>
						<link>http://java.sun.com/j2se/1.6.0/docs/api/</link>
						<link>http://logging.apache.org/log4j/docs/api/</link>
					</links>
					<linksource>true</linksource>
					<maxmemory>900m</maxmemory>
					<source>1.6</source>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>outbrain</id>
			<distributionManagement>
				<repository>
					<id>nexus</id>
					<name>nexus</name>
					<url>http://obweb.il.outbrain.com:8081/nexus/content/repositories/releases/</url>
				</repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>riptano</id>
			<distributionManagement>
				<repository>
					<id>riptano</id>
					<name>riptano</name>
					<url>http://mvn.riptano.com/content/repositories/public/</url>
				</repository>
			</distributionManagement>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>riptano</id>
			<name>riptano</name>
			<url>http://mvn.riptano.com/content/repositories/public/</url>
		</repository>
		<repository>
			<id>codehaus</id>
			<name>codehaus</name>
			<url>http://repository.codehaus.org/</url>
		</repository>
	</repositories>

</project>
